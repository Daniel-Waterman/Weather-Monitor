@using BlazorApp.Shared;
@using static BlazorApp.Client.SiteFunctions; <!--This contains the conversion functions and GetDisplayFloat function-->

<div class="border border-secondary border-2 p-2">
    @switch(CardType)
    {
        case DashboardCardType.Temp:
            <h4><i class="fa-solid fa-temperature-half" aria-hidden="true"/> Temperature</h4>
            if (ImperialUnits)
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(celsiusToFahrenheit(CardValue), 1)°F</h3>
                <h6>Min: @GetDisplayFloat(celsiusToFahrenheit(CardMinValue), 1)°F at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(celsiusToFahrenheit(CardMaxValue), 1)°F at @CardMaxTime.ToString("HH:mm")</h6>
            }
            else
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(CardValue, 1)°C</h3>
                <h6>Min: @GetDisplayFloat(CardMinValue, 1)°C at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(CardMaxValue, 1)°C at @CardMaxTime.ToString("HH:mm")</h6>
            }
            break;
        case DashboardCardType.Humidity:
            <h4><i class="fa-solid fa-droplet" aria-hidden="true"/> Humidity</h4>
            <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(CardValue, 0)%</h3>
            <h6>Min: @GetDisplayFloat(CardMinValue, 0)% at @CardMinTime.ToString("HH:mm")</h6>
            <h6>Max: @GetDisplayFloat(CardMaxValue, 0)% at @CardMaxTime.ToString("HH:mm")</h6>
            break;
        case DashboardCardType.Dew:  
            <h4><i class="fa-solid fa-droplet" aria-hidden="true"/> Dew Point</h4>
            if (ImperialUnits)
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(celsiusToFahrenheit(CardValue), 1)°F</h3>
                <h6>Min: @GetDisplayFloat(celsiusToFahrenheit(CardMinValue), 1)°F at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(celsiusToFahrenheit(CardMaxValue), 1)°F at @CardMaxTime.ToString("HH:mm")</h6>
            }
            else
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(CardValue, 1) °C</h3>
                <h6>Min: @GetDisplayFloat(CardMinValue, 1)°C at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(CardMaxValue, 1)°C at @CardMaxTime.ToString("HH:mm")</h6>
            }
            break;
        case DashboardCardType.Press:   
            <h4><i class="fa-solid fa-gauge-simple" aria-hidden="true"/> Pressure</h4>
            if (ImperialUnits)
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(hPaToInHg(CardValue), 2) inHg</h3>
                <h6>Min: @GetDisplayFloat(hPaToInHg(CardMinValue), 2) inHg at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(hPaToInHg(CardMaxValue), 2) inHg at @CardMaxTime.ToString("HH:mm")</h6>
            }
            else
            {
                <h3 class="border-bottom border-secondary pb-2">@GetDisplayFloat(CardValue, 1) hPa</h3>
                <h6>Min: @GetDisplayFloat(CardMinValue, 1) hPa at @CardMinTime.ToString("HH:mm")</h6>
                <h6>Max: @GetDisplayFloat(CardMaxValue, 1) hPa at @CardMaxTime.ToString("HH:mm")</h6>
            }
            break;
    }
</div>

@code {
    [Parameter]
    public float CardValue { get; set; }

    [Parameter]
    public float CardMinValue { get; set; }

    [Parameter]
    public DateTime CardMinTime { get; set; }

    [Parameter]
    public DateTime CardMaxTime { get; set; }

    [Parameter]
    public float CardMaxValue { get; set; }             

    [Parameter]
    public DashboardCardType CardType { get; set; }

    [Parameter]
    public bool ImperialUnits { get; set; }
}
